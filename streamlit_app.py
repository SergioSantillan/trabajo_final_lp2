import streamlit as st
import pandas as pd
from streamlit_option_menu import option_menu

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Plataforma de Noticias", layout="wide")

# Cargar el archivo CSV
df = pd.read_csv("data/estructura_final.csv")  # Aseg√∫rate de ajustar la ruta correcta

# Barra lateral con logo y men√∫
with st.sidebar:
    # Logo en la barra lateral
    st.image("imagenes/logo.png", use_container_width =True)

    # T√≠tulo estilizado en la barra lateral
    st.markdown(
        """
        <div style="text-align: center; font-size: 24px; font-family: 'Georgia'; font-weight: bold; color: #0063c9; margin-top: 15px;">
            Plataforma de Noticias
        </div>
        """,
        unsafe_allow_html=True,
    )
    
    # Men√∫ de navegaci√≥n en la barra lateral
    menu = option_menu(
        menu_title="Men√∫ Principal",  # T√≠tulo del men√∫
        options=["Noticias Relevantes", "Selector de Noticias", "Gr√°ficos Interactivos", "Miembros del Proyecto"],  # Opciones
        icons=["newspaper", "filter", "bar-chart", "people"],  # √çconos de cada opci√≥n
        menu_icon="cast",  # √çcono principal del men√∫
        default_index=0,  # Primera opci√≥n seleccionada por defecto
        orientation="vertical",
    )

# Contenido din√°mico basado en el men√∫ seleccionado
if menu == "Noticias Relevantes":
    st.subheader("üì∞ Noticias Relevantes")
    
    # Mostrar las noticias en formato de columnas (imagen + texto)
    for index, row in df.iterrows():
        col1, col2 = st.columns([1, 2])  # Divide la fila en dos columnas
        
        # Columna 1: Imagen
        with col1:
            if pd.notnull(row["image"]):  # Verifica si hay imagen
                st.image(row["image"], use_container_width =True)
            else:
                st.image("https://via.placeholder.com/150", use_container_width =True)  # Imagen por defecto
        
        # Columna 2: T√≠tulo y descripci√≥n
        with col2:
            st.markdown(f"### {row['title']}")  # T√≠tulo de la noticia
            st.write(row["description"])  # Descripci√≥n de la noticia
            
            # Enlace estilizado
            st.markdown(
                f'<a href="{row["url"]}" target="_blank" style="color: #0063c9; font-weight: bold;">Leer m√°s ‚Üí</a>',
                unsafe_allow_html=True
            )
        
        # L√≠nea divisoria entre noticias
        st.markdown("---")

elif menu == "Selector de Noticias":
    st.subheader("üîç Selector de Noticias")
    st.write("Filtra y selecciona las noticias que te interesen.")

elif menu == "Gr√°ficos Interactivos":
    st.subheader("üìä Gr√°ficos Interactivos")
    st.write("Explora los gr√°ficos generados a partir de las noticias.")

elif menu == "Miembros del Proyecto":
    st.subheader("üë• Miembros del Proyecto")
    st.write("""
    - **Miembro 1**: Analista de datos  
    - **Miembro 2**: Especialista en visualizaci√≥n  
    - **Miembro 3**: Ingeniero en IA  
    - **Miembro 4**: Desarrollador web  
    """)
